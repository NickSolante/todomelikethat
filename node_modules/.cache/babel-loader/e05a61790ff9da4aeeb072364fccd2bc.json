{"ast":null,"code":"import _slicedToArray from \"/Users/nick/Documents/GitHub/todomelikethat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nick/Documents/GitHub/todomelikethat/src/components/TodoForm.js\";\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nfunction TodoForm({\n  addTodo\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        value = _useState2[0],\n        setValue = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        iType = _useState4[0],\n        setItype = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        qty = _useState6[0],\n        setQty = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        description = _useState8[0],\n        setDescription = _useState8[1];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value, iType, qty, description);\n    setValue('');\n    setItype('');\n    setQty('');\n    setDescription('');\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formTask\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    placeholder: \" Enter Task\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formQty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"number\",\n    value: qty,\n    className: \"input\",\n    onChange: e => setQty(e.target.value),\n    placeholder: \"Qty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    value: description,\n    className: \"input\",\n    onChange: e => setDescription(e.target.value),\n    placeholder: \"Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"input\",\n    value: iType,\n    onChange: e => setItype(e.target.value),\n    placeholder: \" Type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })))), React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nexport default TodoForm;","map":{"version":3,"sources":["/Users/nick/Documents/GitHub/todomelikethat/src/components/TodoForm.js"],"names":["React","useState","Form","Row","Col","Button","TodoForm","addTodo","value","setValue","iType","setItype","qty","setQty","description","setDescription","handleSubmit","e","preventDefault","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nfunction TodoForm({ addTodo }) {\n  const [ value, setValue ] = useState('')\n  const [ iType,  setItype] = useState('')\n  const [ qty, setQty ] = useState('')\n  const [ description, setDescription ] = useState('')\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault()\n    if (!value) return\n\t\taddTodo(value , iType , qty, description)\n    setValue('')\n    setItype('')\n    setQty('')\n    setDescription('')\n  }\n\n\n\treturn (\n\n\n\t\t<form onSubmit={handleSubmit}>\n\n\t\t\t{/* <input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"input\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(e) => setValue(e.target.value)}\n\t\t\t\tplaceholder=\" Enter your task\"\n\t\t\t/>\n      <br/> */}\n      <Form>\n        <Row>\n          <Col>\n            <Form.Group controlId=\"formTask\">\n              <Form.Control type=\"text\" className=\"input\" value={value} onChange={(e) => setValue(e.target.value)} placeholder=\" Enter Task\" />\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Row>\n\n          <Col>\n            <Form.Group controlId=\"formQty\">\n              <Form.Control type=\"number\"  value={qty} className=\"input\" onChange={(e) => setQty(e.target.value)} placeholder=\"Qty\" />\n            </Form.Group>\n          </Col>\n          <Col>\n            <Form.Group controlId=\"formDescription\">\n              <Form.Control type=\"text\" value={description} className=\"input\" onChange={(e) => setDescription(e.target.value)} placeholder=\"Description\" />\n            </Form.Group>\n          </Col>\n          <Col>\n\n\n            <Form.Group controlId=\"formName\">\n              <Form.Control type=\"text\" className=\"input\" value={iType} onChange={(e) => setItype(e.target.value)} placeholder=\" Type\" />\n            </Form.Group>\n          </Col>\n        </Row>\n\n        <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n      </Form>\n\t\t</form>\n\t)\n}\n\nexport default TodoForm\n"]},"metadata":{},"sourceType":"module"}