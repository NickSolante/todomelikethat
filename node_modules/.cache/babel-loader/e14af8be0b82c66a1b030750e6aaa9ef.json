{"ast":null,"code":"import _slicedToArray from \"/Users/nick/Documents/GitHub/todomelikethat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nick/Documents/GitHub/todomelikethat/src/App.js\";\nimport React, { useState } from 'react';\nimport Todo from '../src/components/Todo';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Sidebar from './components/SideBar';\n\nfunction App() {\n  const _useState = useState([{\n    text: 'React Hooks in Depth',\n    isCompleted: false,\n    iType: 'item name ',\n    qty: 2,\n    description: 'the thing is the shit'\n  }, {\n    text: 'Write Articles @ Medium',\n    isCompleted: false,\n    iType: 'item name ',\n    qty: 2,\n    description: 'the thing is the shit'\n  }, {\n    text: 'Share article at Reddit',\n    isCompleted: false,\n    iType: 'item name ',\n    qty: 2,\n    description: 'the thing is the shit'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const items = [{\n    name: 'home',\n    label: 'Home'\n  }, {\n    name: 'billing',\n    label: 'Billing',\n    items: [{\n      name: 'statements',\n      label: 'Statements'\n    }, {\n      name: 'reports',\n      label: 'Reports'\n    }]\n  }, {\n    name: 'settings',\n    label: 'Settings',\n    items: [{\n      name: 'profile',\n      label: 'Profile'\n    }]\n  }];\n\n  const addTodo = (text, iType, qty, description) => {\n    const newTodos = [...todos, {\n      text,\n      iType,\n      qty,\n      description\n    }];\n    setTodos(newTodos);\n    console.log(iType);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Sidebar, {\n    items: items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Nunya \"), todos.map((todo, index) => React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Nunya \"), todos.map((todo, index) => React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nick/Documents/GitHub/todomelikethat/src/App.js"],"names":["React","useState","Todo","TodoForm","Row","Col","Sidebar","App","text","isCompleted","iType","qty","description","todos","setTodos","items","name","label","addTodo","newTodos","console","log","completeTodo","index","removeTodo","splice","map","todo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Todo from '../src/components/Todo'\nimport './App.css'\nimport TodoForm from './components/TodoForm'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Sidebar from './components/SideBar'\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      text: 'React Hooks in Depth',\n      isCompleted: false,\n      iType: 'item name ',\n      qty: 2,\n      description: 'the thing is the shit'\n    },\n    {\n      text: 'Write Articles @ Medium',\n      isCompleted: false,\n      iType: 'item name ',\n      qty: 2,\n      description: 'the thing is the shit'\n    },\n    {\n      text: 'Share article at Reddit',\n      isCompleted: false,\n      iType: 'item name ',\n      qty: 2,\n      description: 'the thing is the shit'\n    }\n  ])\n\n  const items = [\n    { name: 'home', label: 'Home' },\n    {\n      name: 'billing',\n      label: 'Billing',\n      items: [\n        { name: 'statements', label: 'Statements' },\n        { name: 'reports', label: 'Reports' }\n      ]\n    },\n    {\n      name: 'settings',\n      label: 'Settings',\n      items: [{ name: 'profile', label: 'Profile' }]\n    }\n  ]\n\n  const addTodo = (text, iType, qty, description) => {\n    const newTodos = [...todos, { text, iType, qty, description }]\n    setTodos(newTodos)\n    console.log(iType)\n  }\n\n  const completeTodo = index => {\n    const newTodos = [...todos]\n    newTodos[index].isCompleted = !newTodos[index].isCompleted\n    setTodos(newTodos)\n  }\n\n  const removeTodo = index => {\n    const newTodos = [...todos]\n    newTodos.splice(index, 1)\n    setTodos(newTodos)\n  }\n\n  return (\n    <div className='app'>\n      <Row>\n        <Sidebar items={items} />\n        <Col>\n          <div className='todo-list'>\n            <h1>Nunya </h1>\n            {todos.map((todo, index) => (\n              <Todo\n                key={index}\n                index={index}\n                todo={todo}\n                completeTodo={completeTodo}\n                removeTodo={removeTodo}\n              />\n            ))}\n            <TodoForm addTodo={addTodo} />\n          </div>\n        </Col>\n        <Col>\n          <div className='todo-list'>\n            <h1>Nunya </h1>\n            {todos.map((todo, index) => (\n              <Todo\n                key={index}\n                index={index}\n                todo={todo}\n                completeTodo={completeTodo}\n                removeTodo={removeTodo}\n              />\n            ))}\n            <TodoForm addTodo={addTodo} />\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}