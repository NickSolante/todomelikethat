{"ast":null,"code":"import _slicedToArray from \"/Users/nick/Documents/GitHub/todomelikethat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nick/Documents/GitHub/todomelikethat/src/components/AddTodo.js\";\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nexport const AddTodo = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        iType = _useState2[0],\n        setItype = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        qty = _useState4[0],\n        setQty = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        description = _useState6[0],\n        setDescription = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formQty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"number\",\n    value: qty,\n    className: \"input\",\n    onChange: e => setQty(e.target.value),\n    placeholder: \"Qty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    value: description,\n    className: \"input\",\n    onChange: e => setDescription(e.target.value),\n    placeholder: \"Description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"text\",\n    className: \"input\",\n    value: iType,\n    onChange: e => setItype(e.target.value),\n    placeholder: \" Type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })))));\n};\nexport default AddTodo;","map":{"version":3,"sources":["/Users/nick/Documents/GitHub/todomelikethat/src/components/AddTodo.js"],"names":["React","useState","Form","Row","Col","Button","AddTodo","iType","setItype","qty","setQty","description","setDescription","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACDL,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,QACpBM,KADoB;AAAA,QACbC,QADa;;AAAA,qBAELP,QAAQ,CAAC,EAAD,CAFH;AAAA;AAAA,QAEpBQ,GAFoB;AAAA,QAEfC,MAFe;;AAAA,qBAGWT,QAAQ,CAAC,EAAD,CAHnB;AAAA;AAAA,QAGpBU,WAHoB;AAAA,QAGPC,cAHO;;AAI3B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAEH,GAFT;AAGE,IAAA,SAAS,EAAC,OAHZ;AAIE,IAAA,QAAQ,EAAEI,CAAC,IAAIH,MAAM,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAJvB;AAKE,IAAA,WAAW,EAAC,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAYE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEJ,WAFT;AAGE,IAAA,SAAS,EAAC,OAHZ;AAIE,IAAA,QAAQ,EAAEE,CAAC,IAAID,cAAc,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ/B;AAKE,IAAA,WAAW,EAAC,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAZF,EAuBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,KAAK,EAAER,KAHT;AAIE,IAAA,QAAQ,EAAEM,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAJzB;AAKE,IAAA,WAAW,EAAC,OALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAvBF,CADF,CADF;AAuCD,CA3CM;AA6CP,eAAeT,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\n\nexport const AddTodo = () => {\n  const [iType, setItype] = useState('')\n  const [qty, setQty] = useState('')\n  const [description, setDescription] = useState('')\n  return (\n    <div>\n      <Row>\n        <Col>\n          <Form.Group controlId='formQty'>\n            <Form.Control\n              type='number'\n              value={qty}\n              className='input'\n              onChange={e => setQty(e.target.value)}\n              placeholder='Qty'\n            />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group controlId='formDescription'>\n            <Form.Control\n              type='text'\n              value={description}\n              className='input'\n              onChange={e => setDescription(e.target.value)}\n              placeholder='Description'\n            />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group controlId='formName'>\n            <Form.Control\n              type='text'\n              className='input'\n              value={iType}\n              onChange={e => setItype(e.target.value)}\n              placeholder=' Type'\n            />\n          </Form.Group>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default AddTodo\n"]},"metadata":{},"sourceType":"module"}