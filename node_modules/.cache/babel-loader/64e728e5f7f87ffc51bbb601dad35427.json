{"ast":null,"code":"import _slicedToArray from \"/Users/nick/Documents/GitHub/todomelikethat/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nick/Documents/GitHub/todomelikethat/src/App.js\";\nimport React, { useState } from 'react';\nimport Todo from '../src/components/Todo';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction App() {\n  const _useState = useState([{\n    text: 'React Hooks in Depth',\n    isCompleted: false,\n    iType: \"item name \",\n    qty: 2,\n    description: \"the thing is the shit\"\n  }, {\n    text: 'Write Articles @ Medium',\n    isCompleted: false,\n    iType: \"item name \",\n    qty: 2,\n    description: \"the thing is the shit\"\n  }, {\n    text: 'Share article at Reddit',\n    isCompleted: false,\n    iType: \"item name \",\n    qty: 2,\n    description: \"the thing is the shit\"\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const addTodo = (text, iType, qty, description) => {\n    const newTodos = [...todos, {\n      text,\n      iType,\n      qty,\n      description\n    }];\n    setTodos(newTodos);\n    console.log(iType);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = !newTodos[index].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Nunya \"), todos.map((todo, index) => React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Nunya \"), todos.map((todo, index) => React.createElement(Todo, {\n    key: index,\n    index: index,\n    todo: todo,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nick/Documents/GitHub/todomelikethat/src/App.js"],"names":["React","useState","Todo","TodoForm","Row","Col","App","text","isCompleted","iType","qty","description","todos","setTodos","addTodo","newTodos","console","log","completeTodo","index","removeTodo","splice","map","todo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Todo from '../src/components/Todo'\nimport './App.css'\nimport TodoForm from './components/TodoForm'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction App() {\n\tconst [ todos, setTodos ] = useState([\n\t\t{\n\t\t\ttext: 'React Hooks in Depth',\n      isCompleted: false,\n      iType:\"item name \",\n      qty:2,\n      description:\"the thing is the shit\"\n\n\t\t},\n\t\t{\n\t\t\ttext: 'Write Articles @ Medium',\n      isCompleted: false,\n      iType:\"item name \",\n      qty:2,\n      description:\"the thing is the shit\"\n\t\t},\n\t\t{\n\t\t\ttext: 'Share article at Reddit',\n      isCompleted: false,\n      iType:\"item name \",\n      qty:2,\n      description:\"the thing is the shit\"\n\n\t\t}\n\t])\n\tconst addTodo = (text , iType , qty , description) => {\n\t\tconst newTodos = [ ...todos, { text , iType , qty , description} ]\n    setTodos(newTodos)\n    console.log(iType)\n\t}\n\n\tconst completeTodo = (index) => {\n\t\tconst newTodos = [ ...todos ]\n\t\tnewTodos[index].isCompleted = !newTodos[index].isCompleted\n\t\tsetTodos(newTodos)\n\t}\n\n\tconst removeTodo = (index) => {\n\t\tconst newTodos = [ ...todos ]\n\t\tnewTodos.splice(index, 1)\n\t\tsetTodos(newTodos)\n\t}\n\n\treturn (\n\t\t<div className=\"app\">\n      <Row>\n        <Col>\n          <div className=\"todo-list\">\n            <h1>Nunya </h1>\n            {todos.map((todo, index) => (\n              <Todo key={index} index={index} todo={todo} completeTodo={completeTodo} removeTodo={removeTodo} />\n            ))}\n            <TodoForm addTodo={addTodo} />\n          </div>\n      </Col>\n      <Col>\n        <div className=\"todo-list\">\n            <h1>Nunya </h1>\n            {todos.map((todo, index) => (\n              <Todo key={index} index={index} todo={todo} completeTodo={completeTodo} removeTodo={removeTodo} />\n            ))}\n            <TodoForm addTodo={addTodo} />\n          </div>\n      </Col>\n      </Row>\n\t\t</div>\n\t)\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}